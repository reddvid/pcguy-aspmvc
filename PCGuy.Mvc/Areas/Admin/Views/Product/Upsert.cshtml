@model PCGuy.Entities.ViewModels.ProductViewModel

@{
    ViewBag.Title = "Add New Product";
}

<div class="row pb-2">
    <h4 class="text-uppercase">@(Model.Product.Id is not 0 ? "Update" : "Create New") Product</h4>
</div>
<div class="row mb-3">
    <div class="col-4">
        <a asp-action="Index" asp-controller="Product" asp-route-id="0" class="btn btn-outline-secondary">
            <i class="bi bi-arrow-left"></i><span class="ms-2">Back to Products List</span>
        </a>
    </div>
</div>
<form method="post" class="row" enctype="multipart/form-data">
    <div class="border p-3 mt-4">
        <input asp-for="Product.Id" hidden/>
        <input asp-for="Product.FeaturedImage" hidden/>
        <div class="row">
            <div class="col-9">
                <div class="mb-3">
                    <label asp-for="Product.Name"></label>
                    <input asp-for="Product.Name" class="form-control" required>
                </div>
                <div class="mb-3">
                    <label asp-for="Product.Description"></label>
                    <textarea asp-for="Product.Description" class="form-control" required></textarea>
                </div>
                <div class="mb-3">
                    <label asp-for="Product.Specifications"></label>
                    <textarea asp-for="Product.Specifications" class="form-control" required></textarea>
                </div>
                <div class="mb-3">
                    <label asp-for="Product.Price"></label>
                    <input asp-for="Product.Price" class="form-control" required>
                </div>
                <div class="mb-3">
                    <label asp-for="Product.FeaturedImage"></label>
                    <input type="file" name="file" class="form-control">
                </div>
                @* ref: https://stackoverflow.com/questions/18382311/populating-a-razor-dropdownlist-from-a-listobject-in-mvc *@
                <div class="mb-3">
                    @Html.LabelFor(m => m.Product.BrandId, new { @class = "form-label" })
                    @Html.DropDownListFor(m => m.Product.BrandId, Model.BrandListItems, new { @class = "form-select mb-3", id = "brand-select" })
                    <input class="form-control mb-3 visually-hidden" id="brand-input" type="text"/>
                    <a class="btn btn-primary" asp-action="Index" target="_blank" asp-controller="Brand">Add New</a>
                </div>
                <div class="mb-3">
                    <label asp-for="Product.ModelNumber"></label>
                    <input asp-for="Product.ModelNumber" class="form-control">
                </div>
                <div class="mb-3">
                    @Html.LabelFor(m => m.Product.SubcategoryId, new { @class = "form-label" })
                    @Html.DropDownListFor(m => m.Product.SubcategoryId, Model.SubcategoryListItems, new { @class = "form-select mb-3", id = "sc-select" })
                    <input class="form-control mb-3 visually-hidden" id="sc-input" type="text"/>
                    <a class="btn btn-primary" type="button" asp-action="Index" target="_blank" asp-controller="Subcategory">Add New</a>
                </div>
            </div>
            <div class="col-3">
                <img src="@Model.Product.FeaturedImage" alt="@(Model.Product.Name) Image" width="100%" style="border-radius: 5px; border: 1px solid #bbb9b9;"/>
            </div>
        </div>

        <div class="row">
            <div class="col-4">
                @if (Model.Product.Id != 0)
                {
                    <button type="submit" class="btn btn-primary" style="width: 280px;">Update</button>
                }
                else
                {
                    <button type="submit" class="btn btn-primary" style="width: 280px;">Create</button>
                }
            </div>
            <div class="col-4">
                <a asp-action="Index" asp-controller="Product" asp-route-id="0" class="btn btn-outline-secondary">
                    <i class="bi bi-arrow-left"></i><span class="ms-2">Back to Products List</span>
                </a>
            </div>
        </div>
    </div>
</form>

@section Scripts {
    @{
        <partial name="_ValidationScriptsPartial"/>
    }
    <script>
        tinymce.init({
            selector: 'textarea',
            plugins: 'anchor autolink charmap codesample emoticons image link lists media searchreplace table visualblocks wordcount checklist mediaembed casechange export formatpainter pageembed linkchecker a11ychecker tinymcespellchecker permanentpen powerpaste advtable advcode editimage advtemplate ai mentions tinycomments tableofcontents footnotes mergetags autocorrect typography inlinecss markdown',
            toolbar: 'undo redo | blocks fontfamily fontsize | bold italic underline strikethrough | link image media table mergetags | addcomment showcomments | spellcheckdialog a11ycheck typography | align lineheight | checklist numlist bullist indent outdent | emoticons charmap | removeformat',
            tinycomments_mode: 'embedded',
            tinycomments_author: 'Author name',
            mergetags_list: [
                { value: 'First.Name', title: 'First Name' },
                { value: 'Email', title: 'Email' },
            ],
            ai_request: (request, respondWith) => respondWith.string(() => Promise.reject("See docs to implement AI Assistant")),
        });
    </script>
    <script type="text/javascript">
        function goToSubcategory() {
            document.location = "../../subcategories";
        }
    </script>
}